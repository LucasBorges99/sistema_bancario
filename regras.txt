Desafio DIO - Criar um sistema simples no terminal simulando um sistema de banco

- Deve ser possível depositar valores positivos
- Todos os depósitos devem ser armazenados em uma variável e exibidos na operação extrato
- Permitir realizar 3 saques diários com limite máximo de 500 reais por saque
- Caso o usuário não tenha saldo, o sistema deve exibir uma mensagem informando que não será possível sacar por falta de saldo
- Todos os saques devem ficar armazenados em uma variável e exibidos na operação extrato
- A operação extrato deve listar todos os depósitos e saques realizados na conta
- No fim da listagem deve ser exibido o saldo atual da conta (plus: colocar o saldo após cada operação)´
- Os valores devem ser exibidos em formato "R$ xxx.xx"

v2: Otimizando o Sistema Bancário com funções
- Objetivo: Separar funções existentes de saque, depósito, e extrato em funções.
- Criar duas novas fuções: cadastrar usuário (cliente) e cadastrar conta bancária
- Cada função vai ter uma regra na passagem de argumentos
- Função saque: Deve receber os argumentos apenas por nome (keyword only).
- Função depósito: Deve receber os argumentos apenas por posição (positional only)
- Função extrato: Deve receber os argumentos por posição e nome (positional only and keyword only)
- Função usuário: O programa deve armazenar os usuários em uma lista, um usuário é composto por:
    nome, data_nascimento, cpf, endereco
    endereco será armazenado em uma string com o formato: Logradouro, numero - bairro - cidade/sigla estado
- Deve ser armazenado somente os números do CPF
- Não podemos cadastrar 2 usuários com o mesmo cpf
- O programa deve armazenar contas em uma lista, uma conta é composta por: 
    agencia, numero_conta, usuario
    O numero_conta é sequencial, iniciado em 1
    A agencia é fixa: 0001
    O usuário pode ter mais de uma conta, mas uma conta pertence a somente um usuario
- Dica: Vincular um usuario a uma conta, filtrar a lista de usuarios buscando o numero do cpf informado para cada usuario
